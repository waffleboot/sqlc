// Code generated by sqlc. DO NOT EDIT.
// source: query.sql

package cte

import (
	"context"
	"encoding/json"
)

const store = `-- name: Store :many
select name from person
`

func (q *Queries) Store(ctx context.Context) ([]json.RawMessage, error) {
	rows, err := q.db.QueryContext(ctx, store)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []json.RawMessage
	for rows.Next() {
		var name json.RawMessage
		if err := rows.Scan(&name); err != nil {
			return nil, err
		}
		items = append(items, name)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
